#!/bin/bash

VERSION=0.0.7

ACTION=$1
ARG1=$2
ARG2=$3

# decide on the correct extended regular expressions argument
OS=`uname -s`
if [[ "$OS" == "Darwin"  ]]; then
    SEDR='-E'
else
    SEDR='-r'
fi

function repo_current {
    svn info | grep 'URL:' | sed -e 's/URL\: //'
}

function repo_root {
    repo_current | sed $SEDR -e's%/trunk|/branches/(.*$)%%'
}

function repo_path {

    if [ -z "$1" ]; then
        echo -e "Specify the branch name or trunk"
        exit 1
    fi
    
    if [[ "$1" == "trunk" ]]; then
        REPO_PATH="/trunk"
    else
        REPO_PATH="/branches/$1"
    fi

    echo `repo_root`$REPO_PATH
}

function current_branch_name {
    REPO_ROOT=`repo_root`
    REPO_CURRENT=`repo_current`
    echo "echo '$REPO_CURRENT' | sed -e 's%$REPO_ROOT%%' -e 's%branches/%%' | cut -c 2-" | sh
}

case "$ACTION" in
    "br"|"branch" )

        if [ -z "$ARG1" ]; then

            CURRENT_BRANCH_NAME=`current_branch_name`
            REPO_ROOT=`repo_root`
            
            if [[ "$CURRENT_BRANCH_NAME" == "trunk" ]]; then
                echo '* trunk'
            else
                echo '  trunk'
            fi

            echo "echo \"$REPO_ROOT/branches\" | xargs svn ls | sed $SEDR -e 's%(.*)/%  \1%' -e 's/  $CURRENT_BRANCH_NAME/*\0/' -e 's/\*  /\* /' " | sh
        else

            REPO_CURRENT=`repo_current`
            REPO_ROOT=`repo_root`

            echo "svn copy $REPO_CURRENT $REPO_ROOT/branches/$ARG1 -m 'Creating $ARG1 branch' && echo \"Created '$REPO_ROOT/branches/$ARG1'\"" | sh
        fi

        ;;
    "co"|"checkout" )

        if [[ "$ARG1" == "-b" ]]; then
            $0 branch "$ARG2"
            ARG1="$ARG2"
        fi
        repo_path "$ARG1" | xargs svn switch
        ;;
    "merge" )

        if [[ `repo_path "$ARG1"` == `repo_current` ]]; then
            echo "Already on branch '$ARG1', cannot merge to the same branch."
            echo 'Try checking out a different branch first.'
            exit 1
        fi

        REPO_PATH=`repo_path "$ARG1"`
        BRANCH_REVISION=`echo $REPO_PATH | xargs svn log --stop-on-copy -r 1:HEAD --limit 1 | sed -n '2p' | sed $SEDR -e 's/(^r[0-9]+)(.*)/\1/i'`
        
        echo "svn merge --accept postpone -$BRANCH_REVISION:HEAD $REPO_PATH" | sh
        ;;
    "log" )
        
        if [[ -z "$ARG1" ]]; then
            CURRENT_BRANCH_NAME=`current_branch_name`
            REPO_URL=`repo_path $CURRENT_BRANCH_NAME`
        else

            REPO_URL=`repo_path "$ARG1"`

            SVNARGS=''
            if [[ "$ARG1" != "trunk" ]]; then
                SVNARGS='--stop-on-copy'
            fi

        fi

        echo "svn log $SVNARGS $REPO_URL | less" | sh
        ;;
    "df"|"diff" )

        LEFT=''
        RIGHT=''

        if [[ -n "$ARG1"  ]]; then

            if [[ "$ARG1" =~ ".." ]]; then
                ARG2=`echo "$ARG1" | awk -F. '{print $3}'`
                ARG1=`echo "$ARG1" | awk -F. '{print $1}'`
            fi

            RIGHT=`repo_path "$ARG2"`
            LEFT=`repo_path "$ARG1"`
        fi

        STTY_ROWS=`stty size | cut -d " " -f 1`
        DIFF=`svn diff $LEFT $RIGHT`
        DIFF_ROWS=`echo "$DIFF" | wc -l | tr -d ' '`

        LESS=''
        if [[ $DIFF_ROWS -ge $STTY_ROWS ]]; then
            LESS='| less'
        fi

        echo "svn diff $LEFT $RIGHT $LESS" | sh
        ;;
    *)
        echo -e "Gin - a Git inspired client for Subversion (version $VERSION)\n"
        echo -e "usage: gin <command> [<args>]"
        echo -e "\n    Supported commands:\n"
        echo -e "\tbranch [<branchname>]\t\t\tCreate a branch or list branches for this project"
        echo -e "\tcheckout [-b] <branchname>\t\tSwitch to a branch for this project (-b will create the branch too)"
        echo -e "\tmerge <branchname>\t\t\tMerge <branchname> into the current branch"
        echo -e "\tlog [<branchname>]\t\t\tShow the commit logs (for <branchname>)"
        echo -e "\tdiff [<branchname> <branchname>]\tShow local changes or changes between branches"
        echo -e "\n    Shortcuts:\n"
        echo -e "\tbranch\t\tbr"
        echo -e "\tcheckout\tco"
        echo -e "\tdiff\t\tdf"
        echo -e "\nSee https://github.com/richardhodgson/gin"
        ;;
esac
